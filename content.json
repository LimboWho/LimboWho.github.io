{"meta":{"title":"Limbo的私人小屋","subtitle":"记录和积累知识","description":"随手记","author":"Limbo","url":"https://github.com/LimboWho/LimboWho.github.io","root":"/LimboWho.github.io/"},"pages":[{"title":"404","text":"","path":"404/index-1.html","date":"03-29","excerpt":""},{"title":"404","text":"","path":"404/index.html","date":"03-29","excerpt":""},{"title":"search","text":"","path":"search/index-1.html","date":"03-29","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"03-29","excerpt":""}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","path":"2020/08/04/hello-world/","date":"08-04","excerpt":"","tags":[]},{"title":"测试2","text":"","path":"2020/08/04/测试2/","date":"08-04","excerpt":"","tags":[]},{"title":"测试","text":"","path":"2020/08/04/测试/","date":"08-04","excerpt":"","tags":[]},{"title":"CSS积累--居中","text":"CSS元素居中水平居中一、行内元素若是行内元素, 给其父元素设置 text-align:center,即可实现行内元素水平居中。若父元素为box，子元素为a标签，则 &lt;div class=&quot;box&quot;&gt; &lt;a href=&quot;&quot;&gt;我是内联子元素&lt;/a&gt; &lt;/div&gt;父元素box的样式 .box{ width:300px; text-align:center; }二、块级元素1、设置 子元素margin:0 auto即可。（其中，父元素和子元素要有具体的宽度）以box1为父元素，box2为子元素为例： &lt;div class=&quot;box1&quot;&gt; &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt; &lt;/div&gt;box1和box2的css样式如下： .box1{ width:300px; height:300px; background-color: blue; } .box2{ width: 100px; height: 100px; background-color: red; margin: 0 auto; }2、flex布局&lt;div class=&quot;box1&quot; style=&quot;margin-bottom: 20px;&quot;&gt; &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt; &lt;/div&gt;flex布局样式： .box1{ display: flex; justify-content: center; width:300px; height:300px; background-color: blue; } .box2{ width: 100px; height: 100px; background-color: red; }3、CSS3中新增的transform属性其中，父元素设置要为relative（相对定位）或者absolute（绝对定位），left:50%使子元素偏离父元素左边50%（父元素宽度的50%）， transform:translate(-50%,0)使子元素自身向左移动50%（子元素宽度的50%）。 &lt;div class=&quot;box1&quot; style=&quot;margin-bottom: 20px;&quot;&gt; &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt; &lt;/div&gt;样式： .box1{ position: relative; width:300px; height:300px; background-color: blue; } .box2{ position:absolute; left:50%; transform:translate(-50%,0); width: 100px; height: 100px; background-color: red; }其中，transform:translate(-50%,0); 也可以用 margin-left:-50px;（子元素宽度的一半）替代。 4、绝对定位的方式 使用绝对定位方式, 以及left:0;right:0;margin:0 auto; 设置如下： &lt;div class=&quot;box1&quot; style=&quot;margin-bottom: 20px;&quot;&gt; &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt; &lt;/div&gt; Css样式： .box1{ position: relative; width:300px; height:300px; background-color: blue; } .box2{ position:absolute; width: 100px; height: 100px; left: 0; right: 0; margin: 0 auto; background-color: red; } 垂直居中一、单行文本1、若元素是单行文本, 则可设置父元素line-height等于父元素高度可保证垂直居中，示例如下&lt;div class=&quot;box1&quot;&gt; &lt;a&gt;2333&lt;/a&gt; &lt;/div&gt;Css样式 .box1{ width:300px; height:300px; background-color: blue; line-height: 300px; }2、可用 vertical-align 属性, 而vertical-align只有在父层为 td 或者 th 时, 才会生效, 对于其他块级元素, 例如 div、p 等, 默认情况是不支持的. 为了使用vertical-align, 我们需要设置父元素display:table, 子元素 display:table-cell;vertical-align:middle;&lt;div class=&quot;box1&quot;&gt; &lt;a&gt;2333&lt;/a&gt; &lt;/div&gt; CSS样式： .box1{ width:300px; height:300px; display: table; background-color: blue; } a{ display: table-cell; vertical-align: middle; }二、行内块级元素vertical-align起作用的前提是元素为inline水平元素或table-cell元素，包括span, img,input, button, td 以及通过display改变了显示水平为inline水平或者table-cell的元素。这也意味着，默认情况下，div, p等元素设置vertical-align无效。 vertical-align是基于基线对齐的，所以要设置line-height才能达到你要的效果，想了解具体原理请点击这里 若元素是行内块级元素, 基本思想是使用display: inline-block, vertical-align: middle和一个伪元素让内容块处于容器中央。 .parent::after, .son{ display:inline-block; vertical-align:middle; } .parent::after{ content:&apos;&apos;; height:100%; }三、Flex布局利用flex布局实现垂直居中，行内元素和块级元素都适用，推荐使用。 &lt;div class=&quot;box1&quot; style=&quot;margin-bottom: 20px;&quot;&gt; &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;box1&quot;&gt; &lt;a&gt;2333&lt;/a&gt; &lt;/div&gt;CSS样式： .box1{ width:300px; height:300px; display: flex; align-items: center; background-color: blue; } .box2{ width: 100px; height: 100px; background-color: red; }四、绝对定位和相对定位和水平居中利用绝对定位和相对定位的原理相同： &lt;div class=&quot;box1&quot; style=&quot;margin-bottom: 20px;&quot;&gt; &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt; &lt;/div&gt;CSS样式： .box1{ width:300px; height:300px; position: relative; background-color: blue; } .box2{ width: 100px; height: 100px; position: absolute; top:50%; transform: translate(0,-50%); background-color: red; }其中，transform: translate(0,-50%); 可替换为 margin-top:-50px;（子元素高度的一半)。 五、margin自适应设置设置父元素相对定位(position:relative), 子元素为绝对定位（position: relative），利用margin自适应达到居中。 &lt;div class=&quot;box1&quot; style=&quot;margin-bottom: 20px;&quot;&gt; &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt; &lt;/div&gt; CSS样式： .box1{ width:300px; height:300px; position: relative; background-color: blue; } .box2{ width: 100px; height: 100px; position: absolute; top:0; bottom: 0; margin: auto 0; background-color: red; }水平垂直居中常用方法一、Flex布局flex布局是比较常用的布局，父元素利用 justify-content: center; 和 align-items: center; 就可以使元素水平垂直居中。 &lt;div class=&quot;box1&quot; style=&quot;margin-bottom: 20px;&quot;&gt; &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt; &lt;/div&gt;CSS样式： .box1{ width:300px; height:300px; display: flex; justify-content: center; align-items: center; background-color: blue; } .box2{ width: 100px; height: 100px; background-color: red; }二、绝对定位+margin:auto利用相对定位和绝对定位使子元素水平垂直居中。 &lt;div class=&quot;box1&quot; style=&quot;margin-bottom: 20px;&quot;&gt; &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt; &lt;/div&gt;CSS样式： .box1{ width:300px; height:300px; position: relative; background-color: blue; } .box2{ width: 100px; height: 100px; position: absolute; left: 0; right: 0; top: 0; bottom: 0; margin: auto; background-color: red; }三、绝对定位+负margin&lt;div class=&quot;box1&quot; style=&quot;margin-bottom: 20px;&quot;&gt; &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt; &lt;/div&gt;CSS样式： .box1{ width:300px; height:300px; position: relative; background-color: blue; } .box2{ width: 100px; height: 100px; position: absolute; left: 50%; top: 50%; margin-left: -50px; margin-top: -50px; background-color: red; }四、绝对定位+tranform&lt;div class=&quot;box1&quot; style=&quot;margin-bottom: 20px;&quot;&gt; &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt; &lt;/div&gt;CSS样式： .box1{ width:300px; height:300px; position: relative; background-color: blue; } .box2{ width: 100px; height: 100px; position: absolute; left: 50%; top: 50%; transform: translate(-50%,-50%); background-color: red; }总结：常用的居中方式无非是那几种，行内元素用 line-height 和vertical-align来实现居中，块级元素则利用Flex布局、利用绝对定位和margin自适应来调整位置、利用绝对定位和自身偏移来调整位置。 本文章参考了CSS-水平居中、垂直居中、水平垂直居中和16种方法实现水平居中垂直居中两篇文章。","path":"2020/08/01/CSS积累-居中/","date":"08-01","excerpt":"","tags":[{"name":"前端","slug":"前端","permalink":"https://github.com/LimboWho/LimboWho.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"CSS","slug":"CSS","permalink":"https://github.com/LimboWho/LimboWho.github.io/tags/CSS/"}]}],"categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"https://github.com/LimboWho/LimboWho.github.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"CSS","slug":"CSS","permalink":"https://github.com/LimboWho/LimboWho.github.io/tags/CSS/"}]}